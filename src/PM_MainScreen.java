/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Richard Cui
 */

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.security.SecureRandom;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class PM_MainScreen extends javax.swing.JFrame {

    //method to remove trailing whitespace
    public String removeTrailSpace(String s) {
        int len = s.length();
        for(;len>0;len--) {
            if(!Character.isWhitespace(s.charAt(len-1))) break;
        }
        return s.substring(0,len);      
    }
    
    /**
     * Creates new form PM_MainScreen
     */
    public PM_MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        savedFrame = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        savedTextArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        accountTextField = new javax.swing.JTextField();
        openSavedEntriesButton = new javax.swing.JButton();
        confirmPassLabel = new javax.swing.JLabel();
        newCredentialsLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();
        newPassLabel = new javax.swing.JLabel();
        newPassTextField = new javax.swing.JTextField();
        savePassInfoButton = new javax.swing.JButton();
        recommendPassButton = new javax.swing.JButton();
        passDifficultySlider = new javax.swing.JSlider();
        generatedPassTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        accountNameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        confirmPassfield = new javax.swing.JPasswordField();
        copyPassButton = new javax.swing.JButton();

        savedFrame.setTitle("Saved Accounts");
        savedFrame.setLocation(new java.awt.Point(500, 0));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        savedTextArea.setColumns(20);
        savedTextArea.setRows(5);
        jScrollPane1.setViewportView(savedTextArea);

        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout savedFrameLayout = new javax.swing.GroupLayout(savedFrame.getContentPane());
        savedFrame.getContentPane().setLayout(savedFrameLayout);
        savedFrameLayout.setHorizontalGroup(
            savedFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(savedFrameLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(savedFrameLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        savedFrameLayout.setVerticalGroup(
            savedFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(savedFrameLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(savedFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(closeButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SUPREME PASSWORD MANAGER MAIN");
        setLocation(new java.awt.Point(425, 0));

        accountTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        accountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountTextFieldActionPerformed(evt);
            }
        });

        openSavedEntriesButton.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        openSavedEntriesButton.setText("View Saved Entries");
        openSavedEntriesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSavedEntriesButtonActionPerformed(evt);
            }
        });

        confirmPassLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        confirmPassLabel.setText("Confirm Password:");

        newCredentialsLabel.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        newCredentialsLabel.setText("Insert New Credentials Below");

        usernameTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        usernameLabel.setText("New Username:");

        logOutButton.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        newPassLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        newPassLabel.setText("New Password:");

        newPassTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        newPassTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPassTextFieldActionPerformed(evt);
            }
        });

        savePassInfoButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        savePassInfoButton.setText("Save Account");
        savePassInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePassInfoButtonActionPerformed(evt);
            }
        });

        recommendPassButton.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        recommendPassButton.setText("Recommend a Password!");
        recommendPassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recommendPassButtonActionPerformed(evt);
            }
        });

        passDifficultySlider.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        passDifficultySlider.setMaximum(3);
        passDifficultySlider.setMinimum(1);
        passDifficultySlider.setPaintLabels(true);
        passDifficultySlider.setPaintTicks(true);
        passDifficultySlider.setSnapToTicks(true);
        passDifficultySlider.setToolTipText("Easy, Medium, Hard");
        passDifficultySlider.setValue(0);
        passDifficultySlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        passDifficultySlider.setName("Easy, Medium, Hard"); // NOI18N
        passDifficultySlider.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                passDifficultySliderComponentShown(evt);
            }
        });

        generatedPassTextField.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        generatedPassTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatedPassTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginicon.png"))); // NOI18N

        accountNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        accountNameLabel.setText("Account Name:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Easy");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Medium");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Hard");

        confirmPassfield.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N

        copyPassButton.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        copyPassButton.setText("Copy Password to Text Field");
        copyPassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyPassButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameLabel)
                            .addComponent(newPassLabel)
                            .addComponent(confirmPassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(accountNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(logOutButton)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(accountTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                                    .addComponent(usernameTextField)
                                    .addComponent(newPassTextField)
                                    .addComponent(confirmPassfield))
                                .addGap(65, 65, 65))))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(recommendPassButton)
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel4))
                            .addComponent(passDifficultySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(generatedPassTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newCredentialsLabel)
                .addGap(133, 133, 133))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel1)
                        .addGap(89, 89, 89)
                        .addComponent(openSavedEntriesButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(copyPassButton, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(savePassInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(openSavedEntriesButton)
                        .addGap(57, 57, 57)))
                .addComponent(newCredentialsLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPassTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(confirmPassfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(recommendPassButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passDifficultySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addComponent(generatedPassTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(copyPassButton)
                .addGap(18, 18, 18)
                .addComponent(savePassInfoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutButton)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        this.dispose();
        new PM_LoginScreen().pack();       
        new PM_LoginScreen().setVisible(true);
        new PM_LoginScreen().setLocationRelativeTo(null);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void newPassTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPassTextFieldActionPerformed
        // nothing to use here
    }//GEN-LAST:event_newPassTextFieldActionPerformed

    PrintWriter pw;
    FileWriter fw;

    private void savePassInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePassInfoButtonActionPerformed
        String accountName = accountTextField.getText();
        String userName = usernameTextField.getText();
        String newPass = newPassTextField.getText();
        String confirmPass = confirmPassfield.getText();
        List<String> listofStrings = new ArrayList<String>();
        
        //remove trailing spaces from accountName
        accountName = removeTrailSpace(accountName);
        
        //remove trailing spaces from userName
        userName = removeTrailSpace(userName);
        
        //if-else statement to check if the text field contains any characters
        if(accountName.length()>0 && userName.length()>0 && newPass.length()>0 && confirmPass.length()>0) {
            if(newPass.equals(confirmPass)==false) {
                JOptionPane.showMessageDialog(this, "PASSWORDS DO NOT MATCH, TRY AGAIN");
            }
            else {
                try {
                    //get last user login info
                    File userAc = new File("src/lastUserLogin.txt");
                    BufferedReader br = new BufferedReader(new FileReader(userAc));
                    String lastUser = null, oneLine;
                    while((oneLine=br.readLine())!=null) {
                        lastUser = oneLine;
                    }

                    fw = new FileWriter("src/userAccounts/"+lastUser, true);// code to open lastUserLogin.txt and read the last line for correct user information
                    
                    pw = new PrintWriter(fw);
                    
                    FileReader fr = new FileReader("src/userAccounts/"+lastUser);//load data from specified text file
                    
                    String s = new String();
                    char ch;
                    while(fr.ready()) {     //while loop to store all strings within the user Accounts text file
                        ch = (char)fr.read();
                        if(ch=='\n' || ch=='\t') { //if there is a break between strings, it will split them with this condition
                            listofStrings.add(s.toString());
                            s = new String();
                        }
                        else s+=ch;
                    }
                    if(s.length()>0) {
                        listofStrings.add(s.toString());
                    }

                    //if else argument to prevent duplicate accounts, check by account name,username, & password
                    if(listofStrings.contains(userName) && listofStrings.contains(confirmPass)) {
                        JOptionPane.showMessageDialog(this, "Existing Account Found!\nTry again!");
                        confirmPassfield.setText("");
                    }
                    else {
                        //prints account information into the specified text file
                        pw.print("Account Name:\t" + accountName + "\n" + "Username:\t\t" + userName + "\n" + "Password:\t\t" + confirmPass + "\n\n");
                        pw.close();
                        JOptionPane.showMessageDialog(this, "New Account Saved!");
                        
                        accountTextField.setText("");
                        usernameTextField.setText("");
                        newPassTextField.setText("");
                        confirmPassfield.setText("");
                        //clear text fields
                    }
                }
                catch(FileNotFoundException ex) {
                    Logger.getLogger(PM_MainScreen.class.getName()).log(Level.SEVERE, null, ex); //catch file errors
                }
                catch(IOException ex) {
                    Logger.getLogger(PM_MainScreen.class.getName()).log(Level.SEVERE, null, ex); //catch IO errors
                }
            }
        }
        else JOptionPane.showMessageDialog(this, "\tText Field(s) Empty!\nPlease Fill in the Fields"); //shows message dialog if there are no characters in textfields
    }//GEN-LAST:event_savePassInfoButtonActionPerformed

    private void passDifficultySliderComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_passDifficultySliderComponentShown
        //nothing to use here
    }//GEN-LAST:event_passDifficultySliderComponentShown

    
    private void openSavedEntriesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSavedEntriesButtonActionPerformed
        //check userinfo
        try {
            // open correct text file by checking last user login
            File userAc = new File("src/lastUserLogin.txt");
            BufferedReader br = new BufferedReader(new FileReader(userAc)); //Buffered Reader reads line by line
            String oneLine,lastUser = null; 
            while((oneLine=br.readLine())!=null) { 
                lastUser = oneLine; //stores the last line into lastUser variable
            }
            //opening specified user file
            File storeUser = new File("src/userAccounts/" + lastUser);
            
            BufferedReader input = new BufferedReader(new InputStreamReader(new FileInputStream(storeUser)));
            savedTextArea.read(input, evt); //textArea reads the text from specified user text file
            savedFrame.pack(); //sets to preferred size of frame
            savedFrame.setLocationRelativeTo(null); //centers the frame
            savedFrame.setVisible(true); //displays a JFrame with the user information
        }
        catch(IOException ex) {
            Logger.getLogger(PM_MainScreen.class.getName()).log(Level.SEVERE,null,ex); //catch IO errors
        }
    }//GEN-LAST:event_openSavedEntriesButtonActionPerformed

    private void generatedPassTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatedPassTextFieldActionPerformed
        //nothing to use here
    }//GEN-LAST:event_generatedPassTextFieldActionPerformed

    private void accountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountTextFieldActionPerformed
        //nothing to use here
    }//GEN-LAST:event_accountTextFieldActionPerformed

    
    //making use of the java.security.SecureRandom import
    public static String generatePass1(int len) {
        final String chars1 = "abcdefghijklmnopqrstuvwxyz0123456789";
        
        SecureRandom random = new SecureRandom(); //SecureRandom class provides a cryptographically strong number generator
        StringBuilder sb = new StringBuilder(); //StringBuilder class that adds characters to a string, automatically sizing
        
        for(int i=0;i<len;i++) {
            int randomIndex = random.nextInt(chars1.length()); //int randomIndex locates a random location within the String
            sb.append(chars1.charAt(randomIndex)); //appends the randomly found character into the stringbuilder
        }
        return sb.toString();
    } //easy complexity password generator
    
    public static String generatePass2(int len) {
        final String chars2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        
        SecureRandom random = new SecureRandom();
        StringBuilder sb = new StringBuilder();
        
        for(int i=0;i<len;i++) {
            int randomIndex = random.nextInt(chars2.length());
            sb.append(chars2.charAt(randomIndex));
        }
        return sb.toString();
    } //medium complexity password generator
    
    public static String generatePass3(int len) {
        final String chars3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{};:/?><";
        
        SecureRandom random = new SecureRandom();
        StringBuilder sb = new StringBuilder();
        
        for(int i=0;i<len;i++) {
            int randomIndex = random.nextInt(chars3.length());
            sb.append(chars3.charAt(randomIndex));
        }
        return sb.toString();
    } //hard complexity password generator
    
    
    private void recommendPassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recommendPassButtonActionPerformed
        // check value of slider if it's 1,2, or 3 to generate password complexity
        int complexValue = passDifficultySlider.getValue();
        
        
        if(complexValue==1) {
            generatedPassTextField.setText(generatePass1(10)); //string length of 10 characters
        }
        if(complexValue==2) {
            generatedPassTextField.setText(generatePass2(15)); //string length of 15 characters
        }
        if(complexValue==3) {
            generatedPassTextField.setText(generatePass3(20)); //string length of 20 characters
        }
    }//GEN-LAST:event_recommendPassButtonActionPerformed

    private void copyPassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyPassButtonActionPerformed
        // copy generated text into both password fields
        String gPass = generatedPassTextField.getText();
        newPassTextField.setText(gPass);
        confirmPassfield.setText(gPass);
    }//GEN-LAST:event_copyPassButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //save text file to the specified user account file
        try {
            // open correct text file by checking last user login
            File userAc = new File("src/lastUserLogin.txt");
            BufferedReader br = new BufferedReader(new FileReader(userAc)); //Buffered Reader reads line by line
            String oneLine,lastUser = null; 
            while((oneLine=br.readLine())!=null) { 
                lastUser = oneLine; //stores the last line into lastUser variable
            }
            //opening specified user file of last user login
            File storeUser = new File("src/userAccounts/" + lastUser);
            
            BufferedWriter bw = new BufferedWriter(new FileWriter(storeUser)); //writes line by line
            bw.write(savedTextArea.getText());
            bw.close();
            JOptionPane.showMessageDialog(this, "Text File Saved!");
        }
        catch(IOException ex) {
            Logger.getLogger(PM_MainScreen.class.getName()).log(Level.SEVERE,null,ex); //catch IO errors
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // disposes of the savedFrame window
        savedFrame.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PM_MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PM_MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PM_MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PM_MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PM_MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountNameLabel;
    private javax.swing.JTextField accountTextField;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel confirmPassLabel;
    private javax.swing.JPasswordField confirmPassfield;
    private javax.swing.JButton copyPassButton;
    private javax.swing.JTextField generatedPassTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JLabel newCredentialsLabel;
    private javax.swing.JLabel newPassLabel;
    private javax.swing.JTextField newPassTextField;
    private javax.swing.JButton openSavedEntriesButton;
    private javax.swing.JSlider passDifficultySlider;
    private javax.swing.JButton recommendPassButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton savePassInfoButton;
    public javax.swing.JFrame savedFrame;
    public javax.swing.JTextArea savedTextArea;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
